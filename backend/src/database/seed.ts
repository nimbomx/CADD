import mongoose from 'mongoose';
import { UserSchema } from '../users/schemas/user.schema';
import { ContentSchema } from '../content/schemas/content.schema';

const User = mongoose.model('User', UserSchema);
const Content = mongoose.model('Content', ContentSchema);

async function seed() {
  try {
    // Conectar a MongoDB
    await mongoose.connect('mongodb://localhost:27017/nimbropro');
    console.log('‚úÖ Conectado a MongoDB para seed');

    // Limpiar datos existentes
    await User.deleteMany({});
    await Content.deleteMany({});
    console.log('üßπ Datos existentes eliminados');

    // Crear usuarios de prueba
    const programmer = await User.create({
      email: 'developer@example.com',
      firstName: 'Juan',
      lastName: 'P√©rez',
      userType: 'programmer',
      emailVerified: true,
      programmerInfo: {
        skills: ['JavaScript', 'TypeScript', 'React', 'Node.js'],
        experience: '3-5 a√±os',
        github: 'https://github.com/juanperez',
        portfolio: 'https://juanperez.dev',
      },
    });

    const company = await User.create({
      email: 'admin@techcorp.com',
      firstName: 'Mar√≠a',
      lastName: 'Gonz√°lez',
      userType: 'company',
      emailVerified: true,
      companyInfo: {
        companyName: 'TechCorp Solutions',
        industry: 'Tecnolog√≠a',
        size: '50-100 empleados',
        website: 'https://techcorp.com',
      },
    });

    console.log('üë• Usuarios creados exitosamente');

    // Crear contenido de prueba
    const article = await Content.create({
      title: 'Introducci√≥n a la Programaci√≥n con AI',
      slug: 'introduccion-programacion-ai',
      content:
        'Este art√≠culo explora las bases de la programaci√≥n asistida por inteligencia artificial...',
      excerpt:
        'Aprende los fundamentos de la programaci√≥n moderna con herramientas de AI',
      type: 'article',
      status: 'published',
      isPremium: false,
      targetAudience: 'programmer',
      tags: ['AI', 'programaci√≥n', 'tecnolog√≠a'],
      author: programmer._id,
      readingTime: 5,
      publishedAt: new Date(),
    });

    const caseStudy = await Content.create({
      title: 'Transformaci√≥n Digital: Caso de √âxito TechCorp',
      slug: 'transformacion-digital-techcorp',
      content:
        'En este caso de estudio analizamos c√≥mo TechCorp logr√≥ transformar sus procesos...',
      excerpt:
        'Descubre c√≥mo una empresa logr√≥ duplicar su productividad con tecnolog√≠a',
      type: 'case-study',
      status: 'published',
      isPremium: true,
      targetAudience: 'company',
      tags: ['transformaci√≥n digital', 'casos de √©xito', 'empresas'],
      author: company._id,
      readingTime: 8,
      publishedAt: new Date(),
    });

    console.log('üìÑ Contenido creado exitosamente');
    console.log('üéâ Seed completado exitosamente');

    // Mostrar estad√≠sticas
    const userCount = await User.countDocuments();
    const contentCount = await Content.countDocuments();
    console.log(`üìä Usuarios: ${userCount}, Contenido: ${contentCount}`);

    await mongoose.connection.close();
    console.log('üîê Conexi√≥n cerrada');
  } catch (error) {
    console.error('‚ùå Error en seed:', error);
    process.exit(1);
  }
}

// Ejecutar seed si es llamado directamente
if (require.main === module) {
  seed();
}

export default seed;
